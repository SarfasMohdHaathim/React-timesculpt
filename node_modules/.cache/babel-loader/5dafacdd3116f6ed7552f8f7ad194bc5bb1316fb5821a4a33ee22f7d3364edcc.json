{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\react-django-jwt\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swal = require('sweetalert2');\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(localStorage.getItem(\"authTokens\") ? jwtDecode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    let url = \"http://127.0.0.1:8000/api/token/\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n      swal.fire({\n        title: \"Login Success\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"An Error Occured\");\n      swal.fire({\n        title: \"Email - Password does not exist\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const registerUser = async (full_name, email, username, password, password2) => {\n    let url = \"http://127.0.0.1:8000/api/register/\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        full_name,\n        email,\n        username,\n        password,\n        password2\n      })\n    });\n    const data = await response.json();\n    if (response.status == 201) {\n      navigate('/login');\n      swal.fire({\n        title: \"Registration Success\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"An Error Occured\");\n      console.log(data);\n      swal.fire({\n        title: \"There was a server error\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: 'top-right',\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate('/login');\n    swal.fire({\n      title: \"You have been logged out\",\n      icon: \"success\",\n      toast: true,\n      timer: 6000,\n      position: 'top-right',\n      timerProgressBar: true,\n      showConfirmButton: false\n    });\n  };\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"bzDMEi7IclGBaQnbhn0YPsryRVc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","swal","require","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","email","password","url","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","fire","title","icon","toast","timer","position","timerProgressBar","showConfirmButton","console","log","registerUser","full_name","username","password2","logoutUser","removeItem","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/REACT/react-django-jwt/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst swal = require('sweetalert2')\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [authTokens, setAuthTokens] = useState(() => \r\n        localStorage.getItem(\"authTokens\") ? \r\n        JSON.parse(localStorage.getItem(\"authTokens\"))\r\n        : null\r\n    );\r\n\r\n    const [user, setUser] = useState(\r\n        localStorage.getItem(\"authTokens\") ? \r\n        jwtDecode(localStorage.getItem(\"authTokens\"))\r\n        : null\r\n    )\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const loginUser = async (email, password) => {\r\n        let url = \"http://127.0.0.1:8000/api/token/\"\r\n        const response = await fetch(url,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        const data = await response.json()\r\n\r\n        if (response.status === 200){\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n            localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n            navigate(\"/\")\r\n            swal.fire({\r\n                title: \"Login Success\",\r\n                icon: \"success\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false\r\n            })\r\n        } else {\r\n            console.log(response.status)\r\n            console.log(\"An Error Occured\")\r\n            swal.fire({\r\n                title: \"Email - Password does not exist\",\r\n                icon: \"error\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const registerUser = async (full_name, email, username, password, password2) => {\r\n        let url = \"http://127.0.0.1:8000/api/register/\"\r\n        const response = await fetch(url,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({full_name,email, username, password, password2})\r\n        })\r\n        const data = await response.json()\r\n\r\n        if (response.status == 201){\r\n            navigate('/login')\r\n            swal.fire({\r\n                title: \"Registration Success\",\r\n                icon: \"success\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false\r\n            })\r\n        } else {\r\n            console.log(response.status)\r\n            console.log(\"An Error Occured\")\r\n            console.log(data)\r\n            swal.fire({\r\n                title: \"There was a server error\",\r\n                icon: \"error\",\r\n                toast: true,\r\n                timer: 6000,\r\n                position: 'top-right',\r\n                timerProgressBar: true,\r\n                showConfirmButton: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem(\"authTokens\")\r\n        navigate('/login')\r\n        swal.fire({\r\n            title: \"You have been logged out\",\r\n            icon: \"success\",\r\n            toast: true,\r\n            timer: 6000,\r\n            position: 'top-right',\r\n            timerProgressBar: true,\r\n            showConfirmButton: false\r\n        })\r\n    }\r\n\r\n    const contextData = {\r\n        user,setUser,\r\n        authTokens, setAuthTokens,\r\n        registerUser, loginUser, logoutUser\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if (authTokens) {\r\n            setUser(jwtDecode(authTokens.access))\r\n        }\r\n        setLoading(false)\r\n    }, [authTokens, loading])\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}